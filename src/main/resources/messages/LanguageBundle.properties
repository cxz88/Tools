# Action texts
action.CaseSwitcherAction.text=Naming conversion
action.CxzCreateClassAction.text=Generate enum

# Messages for not found
notfound.class.title=Class not found
notfound.class.content={0} not found

# Common dialog texts
choose.package=Please choose package
choose=Please choose
notification.group.custom.notification.group=Notification
code.generate=Code generate

# Code generation tool
tool.gen.select.dev.text=Select the code generation module (the generation method in this module will be compiled and called):
tool.gen.select.datasource=Data source:
tool.gen.select.service=Service module:
tool.gen.select.serviceApi=ServiceApi module:
tool.gen.select.database=Database:
tool.gen.select.table=Table:
tool.gen.select.menu=Menu:
tool.gen.cloud.serviceName=Service name (cloud project only):
tool.gen.text.tablePrefix=Table prefix:
tool.gen.text.basicBusiness=Basic business:
tool.gen.text.tenantModel=Tenant Model:
tool.gen.text.useElementUI=Use element UI:
tool.gen.text.webPrefix=Web prefix:
tool.gen.text.packTheNextLevel=Package the next level:
tool.gen.text.packageTheSecondLevel=Package the second level:
tool.gen.text.wrapperMode=Wrapper mode:
tool.gen.text.javaPackageName=Java package name:
tool.gen.text.frontEndDirectory=Front-end directory:
tool.sure=OK
tool.yes=Yes
tool.no=No
tool.gen.compiling=Compiling
tool.gen.invoke=Calling the service and generating code
tool.gen.finish=Generation completed
tool.gen.error=Generation error
tool.gen.name=Code Generation

# Encoding conversion tool
tool.encodingConversion=Encoding Conversion
tool.encodingConversion.md5=MD5
tool.encodingConversion.base64=Base64
tool.encodingConversion.unicode=Unicode

# InfluxDB tool
tool.influxDb.name=InfluxDB Tool
tool.influxDb.total=Total {0} items
tool.influxDb.pageInfo=Page {0} / {1}
tool.influxDb.query=Execute
tool.influxDb.connectInfo=Connection Information
tool.influxDb.user=Username:
tool.influxDb.pwd=Password:
tool.influxDb.previousPage=Previous
tool.influxDb.nextPage=Next
tool.influxDb.searchError=Query Error

# Naming Style Settings
settings.naming.style.display.name=Naming Style Settings
settings.naming.style.title=Naming Style Settings
settings.naming.style.add=Add
settings.naming.style.remove=Remove
settings.naming.style.moveUp=Move Up
settings.naming.style.moveDown=Move Down
settings.naming.style.up=Up
settings.naming.style.down=Down
settings.naming.style.default.name=Style {0}
settings.naming.style.name=Style Name
settings.naming.style.method=Method Name
settings.naming.style.use.script=Use Groovy Script
settings.naming.style.script=Script Content
settings.naming.style.script.comment=Use 'input' variable to access the normalized text. Return the transformed text.
settings.naming.style.apply=Apply Changes
settings.naming.style.new=New Style
settings.naming.style.example=Script Examples

# Groovy script comments
script.comment.import=Required imports
script.comment.input=Input is a normalized word (snake_case format)\nExample: "hello_world"\nYou need to return the transformed text
script.comment.example=Example: "hello_world" -> "helloWorld"
script.comment.return=Return in camelCase format


